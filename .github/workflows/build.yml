name: build

on:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
  pull_request:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  python-version: '3.13'

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            pypi.org:443
            github.com:443
            api.github.com:443
            *.githubusercontent.com:443
            ghcr.io

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ env.python-version }}
      - name: Lint with Pre-commit
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
      - name: Check REUSE compliance
        run: pip install reuse && python -m reuse lint
      - name: Check Poetry lock file integrity
        run: |
          python${{ env.python-version }} -m pip install --constraint=.github/constraints.txt poetry
          poetry config virtualenvs.in-project true
          poetry check

  build:
    needs: lint
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    name: build (python ${{ matrix.python-version }})
    outputs:
      targz: generic-${{ steps.meta.outputs.version }}.tar.gz
      wheel: generic-${{ steps.meta.outputs.version }}-py3-none-any.whl
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            qlty.sh/d/coverage:443
            qlty-releases.s3.amazonaws.com:443
            files.pythonhosted.org:443
            pypi.org:443
            github.com:443
            *.githubusercontent.com:443
            ghcr.io
            keys.openpgp.org:443
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - name: Install Poetry
        run: |
          python${{ matrix.python-version }} -m pip install --constraint=.github/constraints.txt poetry
          poetry config virtualenvs.in-project true
      - name: Collect Project Data
        id: meta
        run: .github/scripts/metadata.sh
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Test
        run: |
          poetry run pytest --cov=generic
          poetry run coverage lcov
      - name: Upload Code Coverage to Qlty.sh
        uses: qltysh/qlty-action/coverage@v2
        with:
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
          files: coverage.lcov
      - name: Create Source Dist and Wheel
        if: ${{ matrix.python-version == env.python-version }}
        run: poetry build
      - name: Upload generic-${{ steps.meta.outputs.version }}.tar.gz
        if: ${{ matrix.python-version == env.python-version }}
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: generic-${{ steps.meta.outputs.version }}.tar.gz
          path: dist/generic-${{ steps.meta.outputs.version }}.tar.gz
      - name: Upload generic-${{ steps.meta.outputs.version }}-py3-none-any.whl
        if: ${{ matrix.python-version == env.python-version }}
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: generic-${{ steps.meta.outputs.version }}-py3-none-any.whl
          path: dist/generic-${{ steps.meta.outputs.version }}-py3-none-any.whl

  publish-to-pypi:
    name: Publish to PyPI (release only)
    needs: build
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
    if: ${{ github.event_name == 'release' }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Download tar.gz
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: ${{ needs.build.outputs.targz }}
          path: dist
      - name: Download wheel
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: ${{ needs.build.outputs.wheel }}
          path: dist
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # release/v1
