name: build

on:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
  pull_request:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:

env:
  python-version: '3.12'

permissions:
  contents: read

jobs:
  skip-check:
    permissions:
      actions: write  # for fkirc/skip-duplicate-actions to skip or stop workflow runs
      contents: read  # for fkirc/skip-duplicate-actions to read and compare commits
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          egress-policy: audit

      - id: skip_check
        uses: fkirc/skip-duplicate-actions@f75f66ce1886f00957d99748a42c724f4330bdcf # v5.3.1
        with:
          concurrent_skipping: 'same_content'
          do_not_skip: '["release", "workflow_dispatch", "schedule"]'
  lint:
    needs: skip-check
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          egress-policy: audit

      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: ${{ env.python-version }}
      - name: Lint with Pre-commit
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
      - name: Check REUSE compliance
        run: pip install reuse && python -m reuse lint
      - name: Check Poetry lock file integrity
        run: |
          python${{ env.python-version }} -m pip install --constraint=.github/constraints.txt poetry
          poetry config virtualenvs.in-project true
          poetry check

  build:
    needs: lint
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    name: build (python ${{ matrix.python-version }})
    outputs:
      targz: generic-${{ steps.meta.outputs.version }}.tar.gz
      wheel: generic-${{ steps.meta.outputs.version }}-py3-none-any.whl
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          egress-policy: audit

      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - name: Install Poetry
        run: |
          python${{ matrix.python-version }} -m pip install --constraint=.github/constraints.txt poetry
          poetry config virtualenvs.in-project true
      - name: Collect Project Data
        id: meta
        run: .github/scripts/metadata.sh
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Test
        run: poetry run pytest --cov=generic
      - name: Code Climate Coverage Action
        uses: paambaati/codeclimate-action@7c100bd1ed15de0bdee476b38ca759d8c94207b5 # v8.0.0
        env:
          CC_TEST_REPORTER_ID: f9441442730130d385df69241a779ac3b663756ed21881179826e3fab7e01924
        with:
          coverageCommand: poetry run coverage xml
      - name: Create Source Dist and Wheel
        if: ${{ matrix.python-version == env.python.version }}
        run: poetry build
      - name: Upload generic-${{ steps.meta.outputs.version }}.tar.gz
        if: ${{ matrix.python-version == env.python-version }}
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: generic-${{ steps.meta.outputs.version }}.tar.gz
          path: dist/generic-${{ steps.meta.outputs.version }}.tar.gz
      - name: Upload generic-${{ steps.meta.outputs.version }}-py3-none-any.whl
        if: ${{ matrix.python-version == env.python-version }}
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: generic-${{ steps.meta.outputs.version }}-py3-none-any.whl
          path: dist/generic-${{ steps.meta.outputs.version }}-py3-none-any.whl

  publish-to-pypi:
    name: Publish to PyPI (release only)
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
    if: ${{ github.event_name == 'release' }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          egress-policy: audit

      - name: Download tar.gz
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: ${{ needs.build.outputs.targz }}
          path: dist
      - name: Download wheel
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: ${{ needs.build.outputs.wheel }}
          path: dist
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@ec4db0b4ddc65acdf4bff5fa45ac92d78b56bdf0 # release/v1
